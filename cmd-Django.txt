Chuleta de comandos en Windows 10
# Consultar la versión de Python por defecto
python -V

# Crear entorno Conda vacío con Python 3.7
conda create -n django2 python==3.7 sqlite==3.25.3

# Activar el entorno virtual
activate django2

# Listar los paquetes instalados en el entorno virtual
(django2) pip list

# Instalar Django en el entorno virtual
(django2) pip install django  # se puede instalar cualquier versión con django==2.0.2 o la que sea

# Crear un proyecto de Django  -->en la carpeta donde lo vayas a crear
(django2) django-admin startproject proyecto

# Desinstalar Django del entorno virtual
(django2) pip uninstall django

# Desactivar el entorno virtual
(django2) deactivate

# Para manejar imagenes
pip install Pillow 
pip install pylint-django
====================================================
#Correr el servidor
(django2) python manage.py runserver

#Migrar la base de datos
(django2) python manage.py migrate

#Migrar la base de datos
(django2) python manage.py startapp core

================Migraciones====================================
#Crear Migraciones de portfolio
python manage.py makemigrations portfolio

#Migrar a la base de datos
(django2) python manage.py migrate portfolio

================Admin====================================
#Crear super usuario
(django2) python manage.py createsuperuser  
-- ricardo 12345678




================ PIP    ====================================
pip install
pip install virtual env
virtualenv venv
source venv/bin/activate
deactivate

pip freeze -->muestra que tiene instalado el entorno virutal
pip freeze > requirements.txt
pip install -r requirements.txt

pip install flask
pip install pandas






================ tienda online    ====================================

#crea el proyecto
djando-admin startproject tiendaonline

#en la ruta del proyecto crear la app
python manage.py startapp gestionPedidos

#chequeo de la app para ver si esta bien
python manage.py check gestionPedidos

#haz las migraciones
python manage.py makemigrations

#genere el sql
python manage.py sqlmigrate gestionPedidos 0001

#realiza la migración, crea las tablas.
python manage.py migrate


===================base de datos ==========================

python manage.py shell
from gestionPedidos.models import Articulos
art = Articulos (nombre='mesa', seccion='confeccion', precio=75 )
art.save()

#insert
art = Articulos.objects.create (nombre='mesa', seccion='confeccion', precio=75 )

#update
art.precio=95
art.save()

#delete
art = Articulos.objects.get (id=1)
art.delete()

#traer todo lo de la tabla
Lista = Articulos.objects.all()

#obtener el query
Lista.query.__str__()


#librerira para postgress
pip install psycopg2
postgres
123456


#where trae la consulta
Articulos.objects.filter (id=1)

#si cambio el modelo debo realizar las migraciones
python manage.py migrate


#para mayor y menor
Articulos.objects.filter (precio__gte=100)
Articulos.objects.filter (precio__lte=100)
Articulos.objects.filter (precio__range(10,150)
Articulos.objects.filter (precio__range(10,150).order_by('precio')
Articulos.objects.filter (precio__range(10,150).order_by('-precio')


Articulos.objects.filter (precio__range(10,150).order_by('-precio')

=================== admin ==========================
#Crear super usuario
python manage.py createsuperuser  
kk
kk@kk.com
123456


